-- File auto generated by purescript-bridge! --
module KitchenSink.Layout.Blog.Analyses.ArticleInfos where

import Data.Argonaut.Aeson.Decode.Generic (genericDecodeAeson)
import Data.Argonaut.Aeson.Encode.Generic (genericEncodeAeson)
import Data.Argonaut.Aeson.Options as Argonaut
import Data.Argonaut.Decode.Class (class DecodeJson, class DecodeJsonField, decodeJson)
import Data.Argonaut.Encode.Class (class EncodeJson, encodeJson)
import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Prim (String)
import Type.Proxy (Proxy(Proxy))

import Prelude

newtype LinkInfo =
    LinkInfo {
      linkURL :: String
    , linkText :: String
    }

instance encodeJsonLinkInfo :: EncodeJson LinkInfo where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonLinkInfo :: DecodeJson LinkInfo where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericLinkInfo :: Generic LinkInfo _
derive instance newtypeLinkInfo :: Newtype LinkInfo _

--------------------------------------------------------------------------------
_LinkInfo :: Iso' LinkInfo { linkURL :: String, linkText :: String}
_LinkInfo = _Newtype

--------------------------------------------------------------------------------
newtype ImageInfo =
    ImageInfo {
      imageURL :: String
    , imageText :: String
    }

instance encodeJsonImageInfo :: EncodeJson ImageInfo where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonImageInfo :: DecodeJson ImageInfo where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericImageInfo :: Generic ImageInfo _
derive instance newtypeImageInfo :: Newtype ImageInfo _

--------------------------------------------------------------------------------
_ImageInfo :: Iso' ImageInfo { imageURL :: String, imageText :: String}
_ImageInfo = _Newtype

--------------------------------------------------------------------------------
newtype SnippetInfo =
    SnippetInfo {
      snippetContents :: String
    , snippetType :: String
    }

instance encodeJsonSnippetInfo :: EncodeJson SnippetInfo where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonSnippetInfo :: DecodeJson SnippetInfo where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericSnippetInfo :: Generic SnippetInfo _
derive instance newtypeSnippetInfo :: Newtype SnippetInfo _

--------------------------------------------------------------------------------
_SnippetInfo :: Iso' SnippetInfo { snippetContents :: String, snippetType :: String}
_SnippetInfo = _Newtype

--------------------------------------------------------------------------------
