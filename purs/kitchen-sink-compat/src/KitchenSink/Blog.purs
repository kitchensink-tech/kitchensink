-- File auto generated by purescript-bridge! --
module KitchenSink.Blog where

import Data.Argonaut.Aeson.Decode.Generic (genericDecodeAeson)
import Data.Argonaut.Aeson.Encode.Generic (genericEncodeAeson)
import Data.Argonaut.Aeson.Options as Argonaut
import Data.Argonaut.Decode.Class (class DecodeJson, class DecodeJsonField, decodeJson)
import Data.Argonaut.Encode.Class (class EncodeJson, encodeJson)
import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Data.Tuple (Tuple)
import Prim (Array, String)
import Type.Proxy (Proxy(Proxy))

import Prelude

newtype TargetSummary =
    TargetSummary {
      targetType :: TargetType
    , textualTitle :: Maybe String
    , textualSummary :: Maybe String
    , preambleSummary :: Maybe PreambleSummary
    , topicSummary :: Maybe TopicSummary
    }

instance encodeJsonTargetSummary :: EncodeJson TargetSummary where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonTargetSummary :: DecodeJson TargetSummary where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericTargetSummary :: Generic TargetSummary _
derive instance newtypeTargetSummary :: Newtype TargetSummary _

--------------------------------------------------------------------------------
_TargetSummary :: Iso' TargetSummary { targetType :: TargetType, textualTitle :: Maybe String, textualSummary :: Maybe String, preambleSummary :: Maybe PreambleSummary, topicSummary :: Maybe TopicSummary}
_TargetSummary = _Newtype

--------------------------------------------------------------------------------
data TargetType =
    CssTarget
  | ImageTarget
  | GraphVizImageTarget
  | VideoTarget
  | RawTarget
  | JavaScriptSourceTarget
  | HtmlSourceTarget
  | JSONTarget
  | RootFileTarget
  | ArticleTarget
  | GeneratedTarget
  | TopicsIndexTarget

instance encodeJsonTargetType :: EncodeJson TargetType where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonTargetType :: DecodeJson TargetType where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericTargetType :: Generic TargetType _

--------------------------------------------------------------------------------
_CssTarget :: Prism' TargetType Unit
_CssTarget = prism' (\_ -> CssTarget) f
  where
    f CssTarget = Just unit
    f _ = Nothing

_ImageTarget :: Prism' TargetType Unit
_ImageTarget = prism' (\_ -> ImageTarget) f
  where
    f ImageTarget = Just unit
    f _ = Nothing

_GraphVizImageTarget :: Prism' TargetType Unit
_GraphVizImageTarget = prism' (\_ -> GraphVizImageTarget) f
  where
    f GraphVizImageTarget = Just unit
    f _ = Nothing

_VideoTarget :: Prism' TargetType Unit
_VideoTarget = prism' (\_ -> VideoTarget) f
  where
    f VideoTarget = Just unit
    f _ = Nothing

_RawTarget :: Prism' TargetType Unit
_RawTarget = prism' (\_ -> RawTarget) f
  where
    f RawTarget = Just unit
    f _ = Nothing

_JavaScriptSourceTarget :: Prism' TargetType Unit
_JavaScriptSourceTarget = prism' (\_ -> JavaScriptSourceTarget) f
  where
    f JavaScriptSourceTarget = Just unit
    f _ = Nothing

_HtmlSourceTarget :: Prism' TargetType Unit
_HtmlSourceTarget = prism' (\_ -> HtmlSourceTarget) f
  where
    f HtmlSourceTarget = Just unit
    f _ = Nothing

_JSONTarget :: Prism' TargetType Unit
_JSONTarget = prism' (\_ -> JSONTarget) f
  where
    f JSONTarget = Just unit
    f _ = Nothing

_RootFileTarget :: Prism' TargetType Unit
_RootFileTarget = prism' (\_ -> RootFileTarget) f
  where
    f RootFileTarget = Just unit
    f _ = Nothing

_ArticleTarget :: Prism' TargetType Unit
_ArticleTarget = prism' (\_ -> ArticleTarget) f
  where
    f ArticleTarget = Just unit
    f _ = Nothing

_GeneratedTarget :: Prism' TargetType Unit
_GeneratedTarget = prism' (\_ -> GeneratedTarget) f
  where
    f GeneratedTarget = Just unit
    f _ = Nothing

_TopicsIndexTarget :: Prism' TargetType Unit
_TopicsIndexTarget = prism' (\_ -> TopicsIndexTarget) f
  where
    f TopicsIndexTarget = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
newtype PathList =
    PathList {
      paths :: Array (Tuple String TargetSummary)
    }

instance encodeJsonPathList :: EncodeJson PathList where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonPathList :: DecodeJson PathList where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericPathList :: Generic PathList _
derive instance newtypePathList :: Newtype PathList _

--------------------------------------------------------------------------------
_PathList :: Iso' PathList { paths :: Array (Tuple String TargetSummary)}
_PathList = _Newtype

--------------------------------------------------------------------------------
newtype PreambleSummary =
    PreambleSummary {
      author :: String
    , datetxt :: Maybe String
    , title :: String
    , faviconUrl :: String
    }

instance encodeJsonPreambleSummary :: EncodeJson PreambleSummary where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonPreambleSummary :: DecodeJson PreambleSummary where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericPreambleSummary :: Generic PreambleSummary _
derive instance newtypePreambleSummary :: Newtype PreambleSummary _

--------------------------------------------------------------------------------
_PreambleSummary :: Iso' PreambleSummary { author :: String, datetxt :: Maybe String, title :: String, faviconUrl :: String}
_PreambleSummary = _Newtype

--------------------------------------------------------------------------------
newtype TopicSummary =
    TopicSummary {
      tags :: Array String
    , keywords :: Array String
    , imageLink :: Maybe String
    }

instance encodeJsonTopicSummary :: EncodeJson TopicSummary where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonTopicSummary :: DecodeJson TopicSummary where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericTopicSummary :: Generic TopicSummary _
derive instance newtypeTopicSummary :: Newtype TopicSummary _

--------------------------------------------------------------------------------
_TopicSummary :: Iso' TopicSummary { tags :: Array String, keywords :: Array String, imageLink :: Maybe String}
_TopicSummary = _Newtype

--------------------------------------------------------------------------------
