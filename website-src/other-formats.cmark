=base:build-info.json
{"layout":"article"
,"publicationStatus":"Public"
}

=base:preamble.json
{"author": "Lucas DiCioccio"
,"title": "Other types of files"
}

=base:topic.json
{"topics":["haskell", "authoring articles", "philosophy"]
,"keywords":["static-site generators", "design"]
}

=base:social.json
{"twitter": "lucasdicioccio"
,"linkedin": "lucasdicioccio"
,"github": "lucasdicioccio"
}

=base:main-css.css
@import "/css/dev.css";
@import "/css/colors.css";
@import "/css/article.css";
@import "/css/navigation.css";


=base:summary.cmark

There is more to a blog than just CommonMark HTML.
This article explains briefly how the KitchenSink engine handles other format.

=base:main-content.cmark

Besides generating content from `.cmark` [section-based](/sections.html) files,
KitchenSink also copies some video and images, and knows how to call in some
generators for very specific formats.

## videos

KitchenSink copies `.webm` and `.mp4` files under `/videos`.

## sounds

KitchenSink copies `.ogg`, `flac`, `.wav`, `.midi`, and `.mp3` files under `/videos`.

## images

KitchenSink copies `.jpg`, `.jpeg`, and `.png` files under `/images`.

## documents

KitchenSink copies `.pdf` files under `/docs`.

## HTML

KitchenSink copies `.html` files under `/` that is, with no prefix.

The main use-case is to allow porting some other website to KitchenSink, starting from some imported `.html`
Other usages could be to support things like webmaster-verification tools on Google.

:warning: there is no conflict detection yet so avoid having a `.cmark` matching a `.html` file or you risk inconsistencies.

## javascript

KitchenSink copies `.js` files under `/js`.

## So-called raw files

KitchenSink copies `.txt`, `.json`, `.csv`, and `.dhall` files under `/raw` __excepts for robots.txt and kitchen-sink.json__. I use this feature for attaching datasets or showing a long
text result (e.g., a long output of a command that is too slow to generate).

__exception__. The file `robots.txt` stays at the root of the output dir to meet the [robots exclusion standard](https://en.wikipedia.org/wiki/Robots_exclusion_standard).

## GraphViz dot files

KitchenSink calls `dot` to generate under `/gen/images/<filename>.png`. There
is little support to control the command that KitchenSink handles. If you need
more control, generate pictures aside or use a command-section.
